{"version":3,"sources":["services/helpers.js","services/hpCalculator.js","services/formatters.js","services/dataParsers.js","components/header_container/CharName.js","components/header_container/CharClass.js","components/header_container/CharRace.js","components/header_container/CharBackground.js","components/LevelsContainer.js","components/Attribute.js","components/AttributesContainer.js","components/Skill.js","components/SkillsContainer.js","components/SavingThrow.js","components/SavingThrowsContainer.js","components/ProficienciesContainer.js","components/ArmorClass.js","components/HealthPoints.js","components/StatsContainer.js","components/CharContainer.js","components/AtacksContainer.js","components/ItemsContainer.js","components/Sheet.js","components/App.js","serviceWorker.js","index.js"],"names":["attributeNameFromType","type","proficiencyBonusFromLevel","level","totalSkillBonus","proficient","bonus","modifier","modifierFromAttribute","attribute","Math","floor","modifiers","base","racial","str","dex","con","int","wis","cha","listNames","array","Array","from","item","refreshProfObj","profs","profObj","athletics","acrobatics","sleightOfHand","stealth","arcana","history","investigation","nature","religion","animalHandling","insight","medicine","perception","survival","deception","intimidation","performance","persuasion","forEach","prof","makeSelectable","items","map","value","label","averageHp","conMod","hitDice","startingHp","rolls","averageRoll","conModAddition","camelize","replace","word","index","toLowerCase","toUpperCase","savingProficienciesFromClass","className","attr_keys","ClassesData","find","name","proficiencies","savingThrow","includes","hitDiceNumberFromClass","faces","skillChoicesFromClass","skillChoices","skills","choose","choice","racialAttributes","raceName","obj","RacesData","attributes","backgroundParagraphs","backgroundName","BackgroundsInfoData","entries","skillProfsFromBackground","BackgroundsData","bgSkill","featureFromBackground","feature","CharName","props","state","handleChange","bind","event","this","setState","target","onNameChange","onChange","Component","CharClass","selectedObj","onClassChange","options","CharRace","onRaceChange","CharBackground","onBackgroundChange","LevelsContainer","proficiencyBonus","newLevel","parseInt","helpers","onLevelChange","data-testid","Attribute","handleBaseChange","prevProps","newRacial","newModifier","newBase","AttributesContainer","onAttributeChange","onModifierChange","attributes_racial","Skill","total","onSetProficient","skill","checkbox","locked","onClick","toggleProficiency","SkillsContainer","backgroundSkills","background","chosen","handleSetProficient","class","skillIsFromBackground","skillIsChoosable","toggle","chooseMax","count","newProficiencies","newChosen","Object","entry","key","skillIsLocked","calculateTotalMod","SavingThrow","SavingThrowsContainer","savingProficiencies","ProficienciesContainer","sanitizedTools","toolProf","tools","undefined","join","dataParsers","length","filter","element","armorProf","armor","weaponProf","weapons","toolProficiencies","languages","ArmorClass","dexMod","HealthPoints","current","max","newMax","newHp","onHpChange","StatsContainer","handleHpChange","armorBase","shieldMod","CharContainer","paragraph","arrayToParagraphs","description","object","rollDice","roll","concat","specialty","rollableObject","characteristic","suggested_characteristics","characteristics","fluff","fluffView","featureView","specialtyView","characteristicView","AtacksContainer","ItemsContainer","equipment","Sheet","handleLevelChange","newProfBonus","newHpMax","hpCalculator","attributeModifiers","hpMax","handleAttributeChange","new_attributes","changed_attribute","assign","handleModifierChange","new_modifiers","changed_modifier","handleClassChange","newSavingProficiencies","handleRaceChange","racial_attrs","race","handleBackgroundChange","handleNameChange","charName","hpCurrent","attributesBase","attributesRacial","backgrounds","App","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6d114583.chunk.js","sourcesContent":["export function attributeNameFromType(type) {\n  switch(type) {\n    case 'str':\n      return 'Strength'\n    case 'dex':\n      return 'Dexterity'\n    case 'con':\n      return 'Constitution'\n    case 'int':\n      return 'Inteligence'\n    case 'wis':\n      return 'Wisdom'\n    case 'cha':\n      return 'Charisma'\n    default:\n      return 'N/A'\n  }\n}\n\nexport function proficiencyBonusFromLevel(level) {\n  if(level < 5){\n    return 2;\n  } else if(level < 9) {\n    return 3;\n  } else if(level < 13) {\n    return 4;\n  } else if(level < 17) {\n    return 5;\n  } else {\n    return 6;\n  }\n}\n\nexport function totalSkillBonus(proficient, bonus, modifier) {\n  return proficient ? bonus + modifier : modifier\n}\n\nexport function mapOfSkillAttribute() {\n  return {\n    athletics:      'str',\n    acrobatics:     'dex',\n    sleightOfHand:  'dex',\n    stealth:        'dex',\n    arcana:         'int',\n    history:        'int',\n    investigation:  'int',\n    nature:         'int',\n    religion:       'int',\n    animalHandling: 'wis',\n    insight:        'wis',\n    medicine:       'wis',\n    perception:     'wis',\n    survival:       'wis',\n    deception:      'cha',\n    intimidation:   'cha',\n    performance:    'cha',\n    persuasion:     'cha'\n  }\n}\n\nexport function attributeOfSkill(skill) {\n  return mapOfSkillAttribute()[skill]\n}\n\nexport function modifierFromAttribute(attribute) {\n  return Math.floor((attribute - 10) / 2);\n}\n\nexport function modifiers(base, racial) {\n  return {\n    str: modifierFromAttribute(base.str + racial.str),\n    dex: modifierFromAttribute(base.dex + racial.dex),\n    con: modifierFromAttribute(base.con + racial.con),\n    int: modifierFromAttribute(base.int + racial.int),\n    wis: modifierFromAttribute(base.wis + racial.wis),\n    cha: modifierFromAttribute(base.cha + racial.cha)\n  }\n}\n\nexport function listNames(array) {\n  return Array.from(array, item => item[\"name\"])\n}\n\nexport function refreshProfObj(profs) {\n  let profObj = {\n    athletics:      false,\n    acrobatics:     false,\n    sleightOfHand:  false,\n    stealth:        false,\n    arcana:         false,\n    history:        false,\n    investigation:  false,\n    nature:         false,\n    religion:       false,\n    animalHandling: false,\n    insight:        false,\n    medicine:       false,\n    perception:     false,\n    survival:       false,\n    deception:      false,\n    intimidation:   false,\n    performance:    false,\n    persuasion:     false\n  }\n\n  profs.forEach(prof => {\n    profObj[prof] = true\n  })\n\n  return profObj\n}\n\nexport function makeSelectable(items) {\n  return items.map(item => {\n    return { value: item, label: item }\n  })\n}\n","export function averageHp(level, conMod, hitDice) {\n  var startingHp = hitDice + conMod\n  if(level === 1){ return startingHp }\n\n  var maxDice = hitDice\n  var rolls = level - 1\n  var averageRoll = ((maxDice + 1) / 2) * rolls\n  var conModAddition = rolls * conMod // Warning! with high Constitution, HP may be inflated\n\n  return startingHp + Math.floor(averageRoll) + conModAddition\n}\n\nexport function rolledHp(level, conMod, hitDice) {\n}\n","export function humanizeCamelCase(string) {\n  return string\n    // insert a space before all caps\n    .replace(/([A-Z])/g, ' $1')\n    // uppercase the first character\n    .replace(/^./, function(str){ return str.toUpperCase(); })\n}\n\nexport function camelize(str) {\n  // stackoverflow copy pasta\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\n    return index === 0 ? word.toLowerCase() : word.toUpperCase();\n  }).replace(/\\s+/g, '');\n}\n","import RacesData from '../data/races.json';\nimport BackgroundsInfoData from '../data/backgrounds-info.json';\nimport BackgroundsData from '../data/backgrounds-full.json';\nimport ClassesData from '../data/classes.json';\n\nimport { camelize } from './formatters'\n\nexport function savingProficienciesFromClass(className) {\n  var item = ClassesData.find(({name}) => name === className)\n  var attr_keys = item.proficiencies.savingThrow // array with attribute keys\n  return {\n    str: attr_keys.includes(\"str\"),\n    dex: attr_keys.includes(\"dex\"),\n    con: attr_keys.includes(\"con\"),\n    int: attr_keys.includes(\"int\"),\n    wis: attr_keys.includes(\"wis\"),\n    cha: attr_keys.includes(\"cha\")\n  }\n}\n\nexport function hitDiceNumberFromClass(className) {\n  var classObj = ClassesData.find(({name}) => name === className)\n  return classObj.hitDice.faces;\n}\n\nexport function armorProficienciesFromClass(className) {\n  var classObj = ClassesData.find(({name}) => name === className)\n  var armorProf = classObj.proficiencies.armor\n  return armorProf === undefined ? 'none' : armorProf.join(', ');\n}\n\nexport function weaponProficienciesFromClass(className) {\n  var classObj = ClassesData.find(({name}) => name === className)\n  var weaponProf = classObj.proficiencies.weapons\n  return weaponProf === undefined ? 'none' : weaponProf.join(', ');\n}\n\nexport function toolProficienciesFromClass(className) {\n  var classObj = ClassesData.find(({name}) => name === className)\n  var toolProf = classObj.proficiencies.tools\n  return toolProf === undefined ? 'none' : toolProf.join(', ');\n}\n\nexport function skillChoicesFromClass(className) {\n  var classObj = ClassesData.find(({name}) => name === className)\n  var skillChoices = classObj.proficiencies.skills[0].choose\n  skillChoices.from = skillChoices.from.map((choice) => {\n    return camelize(choice)\n  });\n\n  return skillChoices\n}\n\nexport function racialAttributes(raceName) {\n  var obj = RacesData.find(({ name }) => name === raceName)\n\n  return {\n    str: obj.attributes.str || 0,\n    dex: obj.attributes.dex || 0,\n    con: obj.attributes.con || 0,\n    int: obj.attributes.int || 0,\n    wis: obj.attributes.wis || 0,\n    cha: obj.attributes.cha || 0\n  }\n}\n\nexport function backgroundParagraphs(backgroundName) {\n  var background = BackgroundsInfoData.find(({name}) => name === backgroundName)\n  return background.entries\n}\n\nexport function skillProfsFromBackground(backgroundName) {\n  let background = BackgroundsData.find(({name}) => name === backgroundName)\n  let skills = background.proficiencies.skills\n  skills = skills.map((bgSkill) => {\n    return camelize(bgSkill)\n  })\n  return skills\n}\n\nexport function languagesFromBackground(backgroundName) {\n  var background = BackgroundsData.find(({name}) => name === backgroundName)\n  return background.proficiencies.languages[0] || 'none'\n}\n\nexport function toolProfsFromBackground(backgroundName) {\n  var background = BackgroundsData.find(({name}) => name === backgroundName)\n  let toolProf = background.proficiencies.tools\n  return toolProf.length > 0 ? toolProf.join(', ') : 'none'\n}\n\nexport function featureFromBackground(backgroundName) {\n  var background = BackgroundsData.find(({name}) => name === backgroundName)\n  return background.feature\n}\n\nexport function specialtyFromBackground(backgroundName) {\n  var background = BackgroundsData.find(({name}) => name === backgroundName)\n  return background.specialty\n}\n\nexport function characteristicFromBackground(backgroundName) {\n  var background = BackgroundsData.find(({name}) => name === backgroundName)\n  return background.suggested_characteristics\n}\n\nexport function equipmentFromBackground(backgroundName) {\n  var background = BackgroundsData.find(({name}) => name === backgroundName)\n  return background.equipment\n}\n","import React, { Component } from 'react';\nimport '../../css/CharName.css';\n\nclass CharName extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n    this.props.onNameChange(event.target.value);\n  }\n\n  render(){\n    return(\n      <div className=\"char-name\">\n        <input\n          type=\"text\"\n          value={this.state.value}\n          onChange={this.handleChange} />\n      </div>\n    );\n  }\n}\n\nexport default CharName;\n","import React, { Component } from 'react';\nimport Select from 'react-select'\nimport { listNames, makeSelectable } from '../../services/helpers.js'\nimport ClassesData from '../../data/classes.json'\n\nclass CharClass extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: { value: props.value, label: props.value }\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(selectedObj) {\n    this.setState({value: selectedObj});\n    this.props.onClassChange(selectedObj.value);\n  }\n\n  render(){\n    return(\n      <div className=\"char-class\">\n        <strong>Class</strong>\n        <Select\n          value={this.state.value}\n          options={makeSelectable(listNames(ClassesData))}\n          onChange={this.handleChange} />\n      </div>\n    );\n  }\n}\n\nexport default CharClass;\n","import React, { Component } from 'react';\nimport Select from 'react-select'\nimport { listNames, makeSelectable } from '../../services/helpers.js'\nimport RacesData from '../../data/races.json'\n\nclass CharRace extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: { value: props.value, label: props.value }\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(selectedObj) {\n    this.setState({value: selectedObj});\n    this.props.onRaceChange(selectedObj.value);\n  }\n\n  render(){\n    return(\n      <div className=\"char-race\">\n        <strong>Race</strong>\n        <Select\n          value={this.state.value}\n          options={makeSelectable(listNames(RacesData))}\n          onChange={this.handleChange} />\n      </div>\n    );\n  }\n}\n\nexport default CharRace;\n","import React, { Component } from 'react';\nimport Select from 'react-select'\nimport { listNames, makeSelectable } from '../../services/helpers.js'\nimport BackgroundsData from '../../data/backgrounds-full.json'\n\nclass CharBackground extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: { value: props.value, label: props.value }\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(selectedObj) {\n    this.setState({value: selectedObj});\n    this.props.onBackgroundChange(selectedObj.value);\n  }\n\n  render(){\n    return(\n      <div className=\"char-background\">\n        <strong>Background</strong>\n        <Select\n          value={this.state.value}\n          options={makeSelectable(listNames(BackgroundsData))}\n          onChange={this.handleChange} />\n      </div>\n    );\n  }\n}\n\nexport default CharBackground;\n","import React, { Component } from 'react';\nimport '../css/LevelsContainer.css'\nimport * as helpers from '../services/helpers';\n\nclass LevelsContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value,\n      proficiencyBonus: props.proficiencyBonus\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event){\n    var newLevel = parseInt(event.target.value) || 0\n\n    if(newLevel < 1) { newLevel = 1 }\n\n\t\tevent.target.value = newLevel\n\n    this.setState({\n      value: newLevel,\n      proficiencyBonus: helpers.proficiencyBonusFromLevel(newLevel)\n    });\n    this.props.onLevelChange(newLevel);\n  }\n\n  render() {\n    return(\n      <div className=\"levels-container\">\n        <div className=\"level-label\">Level</div>\n        <input className=\"level-value\" data-testid=\"levelValue\"\n          type=\"number\"\n          value={this.state.value}\n          onChange={this.handleChange} />\n        <p data-testid=\"profBonus\">\n          Proficiency Bonus: {this.props.proficiencyBonus}\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default LevelsContainer;\n","import React, { Component } from 'react';\nimport '../css/Attribute.css';\nimport * as helpers from '../services/helpers';\n\nclass Attribute extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      base: this.props.base,\n      racial: this.props.racial,\n      modifier: this.props.modifier\n    };\n\n    this.handleBaseChange = this.handleBaseChange.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.racial !== prevProps.racial){\n      var newRacial = this.props.racial\n      var newModifier = helpers.modifierFromAttribute(this.state.base + newRacial)\n      this.setState({\n        racial: newRacial,\n        modifier: newModifier\n      })\n      this.props.onChange(this.props.type, this.state.base, newModifier);\n    }\n  }\n\n  handleBaseChange(event) {\n    var newBase = parseInt(event.target.value) || 0\n\t\tif(newBase < 1) { newBase = 1 }\n\n    event.target.value = newBase\n\n    var newModifier = helpers.modifierFromAttribute(newBase + this.state.racial)\n\n    this.setState({\n      base: newBase,\n      modifier: newModifier\n    });\n\n    this.props.onChange(this.props.type, newBase, newModifier);\n  }\n\n  render() {\n    return(\n      <div className=\"attribute\">\n        <div className=\"attribute-name\" data-testid=\"attributeName\">\n          {helpers.attributeNameFromType(this.props.type)}\n        </div>\n        <input className=\"attribute-base\" data-testid=\"attributeBase\"\n          type=\"number\"\n          value={this.state.base}\n          onChange={this.handleBaseChange} />\n        <div className=\"attribute-racial\" data-testid=\"attributeRacial\">\n          racial: {this.state.racial}\n        </div>\n        <div className=\"attribute-value\" data-testid=\"attributeTotal\">\n          {this.state.base + this.state.racial}\n        </div>\n        <div className=\"attribute-mod\" data-testid=\"attributeMod\">\n          {this.state.modifier}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Attribute;\n","import React, { Component } from 'react';\nimport Attribute from './Attribute';\nimport '../css/AttributesContainer.css';\n\nclass AttributesContainer extends Component {\n  constructor(props){\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(type, newBase, newModifier) {\n    this.props.onAttributeChange(type, newBase)\n    this.props.onModifierChange(type, newModifier)\n  }\n\n  render() {\n    return(\n      <div className=\"attributes-container\">\n        <Attribute\n          type=\"str\"\n          base={this.props.attributes.str}\n          racial={this.props.attributes_racial.str}\n          modifier={this.props.modifiers.str}\n          onChange={this.handleChange}/>\n        <Attribute\n          type=\"dex\"\n          base={this.props.attributes.dex}\n          racial={this.props.attributes_racial.dex}\n          modifier={this.props.modifiers.dex}\n          onChange={this.handleChange}/>\n        <Attribute\n          type=\"con\"\n          base={this.props.attributes.con}\n          racial={this.props.attributes_racial.con}\n          modifier={this.props.modifiers.con}\n          onChange={this.handleChange}/>\n        <Attribute\n          type=\"int\"\n          base={this.props.attributes.int}\n          racial={this.props.attributes_racial.int}\n          modifier={this.props.modifiers.int}\n          onChange={this.handleChange}/>\n        <Attribute\n          type=\"wis\"\n          base={this.props.attributes.wis}\n          racial={this.props.attributes_racial.wis}\n          modifier={this.props.modifiers.wis}\n          onChange={this.handleChange}/>\n        <Attribute\n          type=\"cha\"\n          base={this.props.attributes.cha}\n          racial={this.props.attributes_racial.cha}\n          modifier={this.props.modifiers.cha}\n          onChange={this.handleChange}/>\n      </div>\n    )\n  }\n}\n\nexport default AttributesContainer;\n","import React, { Component } from 'react';\nimport { totalSkillBonus } from '../services/helpers'\nimport { humanizeCamelCase } from '../services/formatters'\nimport '../css/Skill.css'\n\nclass Skill extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      total: totalSkillBonus(props.proficient, props.bonus, props.modifier)\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.modifier !== prevProps.modifier){\n      this.setState({\n        total: totalSkillBonus(this.props.proficient, this.props.bonus, this.props.modifier)\n      });\n    }\n\n    if(this.props.bonus !== prevProps.bonus){\n      this.setState({\n        total: totalSkillBonus(this.props.proficient, this.props.bonus, this.props.modifier)\n      });\n    }\n\n    if(this.props.proficient !== prevProps.proficient){\n      this.setState({\n        total: totalSkillBonus(this.props.proficient, this.props.bonus, this.props.modifier)\n      });\n    }\n  }\n\n  toggleProficiency(){\n    if(this.props.proficient) {\n      this.props.onSetProficient(this.props.skill, false);\n    } else {\n      this.props.onSetProficient(this.props.skill, true);\n    }\n  }\n\n  render() {\n    let checkbox;\n\n    if(this.props.locked){\n      checkbox = <div className=\"skill-proficiency locked-checkbox\">\n        {this.props.proficient ? 'X' : ''}\n      </div>\n    } else {\n      checkbox = <div className=\"skill-proficiency\" onClick={() => this.toggleProficiency()}>\n        {this.props.proficient ? 'X' : ''}\n      </div>\n    }\n\n    return(\n      <div className=\"skill\">\n        {checkbox}\n        <div className=\"skill-name\">{humanizeCamelCase(this.props.skill)}</div>\n        <div className=\"skill-total\">+{this.state.total}</div>\n      </div>\n    )\n  }\n}\n\nexport default Skill;\n","import React, { Component } from 'react';\nimport { refreshProfObj, mapOfSkillAttribute } from '../services/helpers'\nimport { skillProfsFromBackground, skillChoicesFromClass } from '../services/dataParsers'\n\nimport Skill from './Skill';\nimport '../css/SkillsContainer.css'\n\nclass SkillsContainer extends Component {\n  constructor(props) {\n    super(props)\n\n    const backgroundSkills = skillProfsFromBackground(props.background)\n    this.state = {\n      chosen: 0,\n      proficiencies: refreshProfObj(backgroundSkills)\n    }\n\n    this.handleSetProficient = this.handleSetProficient.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.background !== prevProps.background ||\n       this.props.class !== prevProps.class) {\n\n      const backgroundSkills = skillProfsFromBackground(this.props.background)\n      this.setState({\n        chosen: 0,\n        proficiencies: refreshProfObj(backgroundSkills)\n      })\n    }\n  }\n  \n  skillIsFromBackground(skill) {\n    return skillProfsFromBackground(this.props.background).includes(skill)\n  }\n\n  skillIsChoosable(skill) {\n    return skillChoicesFromClass(this.props.class).from.includes(skill)\n  }\n\n  skillIsLocked(skill){\n    if(this.skillIsFromBackground(skill)) return true\n    if(!this.skillIsChoosable(skill)) return true\n\n    return false\n  }\n\n  handleSetProficient(skill, toggle){\n    let chooseMax = skillChoicesFromClass(this.props.class).count\n    if(toggle && this.state.chosen >= chooseMax) return\n\n    let newProficiencies = this.state.proficiencies\n    let newChosen = this.state.chosen\n\n    newProficiencies[skill] = toggle\n    toggle ? ++newChosen : --newChosen\n\n    this.setState({\n      chosen: newChosen,\n      proficiencies: newProficiencies\n    })\n  }\n\n  render() {\n    let chooseMax = skillChoicesFromClass(this.props.class).count\n\n    return(\n      <div className=\"skills-container\">\n        <strong>Skills (chosen {this.state.chosen}/{chooseMax})</strong>\n        {\n          Object.entries(mapOfSkillAttribute()).map((entry) => {\n            const skill = entry[0]\n            const attribute = entry[1]\n\n            return(\n              <Skill key={skill} skill={skill}\n                modifier={this.props.modifiers[attribute]}\n                bonus={this.props.bonus}\n                proficient={this.state.proficiencies[skill]}\n                locked={this.skillIsLocked(skill)}\n                onSetProficient={this.handleSetProficient}/>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\n\nexport default SkillsContainer;\n","import React, { Component } from 'react';\nimport '../css/SavingThrow.css'\nimport * as helpers from '../services/helpers';\n\n\nfunction calculateTotalMod(proficient, bonus, modifier) {\n  if(proficient){\n    return bonus + modifier;\n  } else {\n    return modifier;\n  }\n}\n\nfunction markProficiency(proficient) {\n  if(proficient)\n    return 'X';\n  else\n    return '';\n}\n\nclass SavingThrow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: helpers.attributeNameFromType(this.props.type),\n      bonus: props.bonus,\n      proficient: props.proficient,\n      modifier: props.modifier,\n      total: calculateTotalMod(props.proficient, props.bonus, props.modifier)\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.modifier !== prevProps.modifier) {\n      this.setState({\n        modifier: this.props.modifier,\n        total: calculateTotalMod(this.state.proficient, this.state.bonus, this.props.modifier)\n      });\n    }\n\n    if(this.props.proficient !== prevProps.proficient) {\n      this.setState({\n        proficient: this.props.proficient,\n        total: calculateTotalMod(this.props.proficient, this.state.bonus, this.state.modifier)\n      });\n    }\n\n    if(this.props.bonus !== prevProps.bonus) {\n      this.setState({\n        bonus: this.props.bonus,\n        total: calculateTotalMod(this.state.proficient, this.props.bonus, this.state.modifier)\n      });\n    }\n  }\n\n  changeTotal(){\n    if(this.state.proficient)\n      this.setState({\n        proficient: false,\n        total: calculateTotalMod(false, this.state.bonus, this.state.modifier)\n      });\n    else\n      this.setState({\n        proficient: true,\n        total: calculateTotalMod(true, this.state.bonus, this.state.modifier)\n      });\n  }\n\n  render() {\n    return(\n      <div className=\"saving-throw\">\n        <div className=\"saving-throw-proficiency\">\n          {markProficiency(this.state.proficient)}\n        </div>\n        <div className=\"saving-throw-attribute-name\">{this.state.name}</div>\n        <div className=\"saving-throw-total\">+{this.state.total}</div>\n      </div>\n    )\n  }\n}\n\nexport default SavingThrow;\n","import React, { Component } from 'react';\nimport SavingThrow from './SavingThrow'\nimport '../css/SavingThrowsContainer.css'\n\nclass SavingThrowsContainer extends Component {\n  render() {\n    return(\n      <div className=\"saving-container\">\n        <strong>Saving Throws</strong>\n        <SavingThrow\n          type=\"str\"\n          modifier={this.props.modifiers.str}\n          bonus={this.props.bonus}\n          proficient={this.props.savingProficiencies.str}/>\n        <SavingThrow\n          type=\"dex\"\n          modifier={this.props.modifiers.dex}\n          bonus={this.props.bonus}\n          proficient={this.props.savingProficiencies.dex}/>\n        <SavingThrow\n          type=\"con\"\n          modifier={this.props.modifiers.con}\n          bonus={this.props.bonus}\n          proficient={this.props.savingProficiencies.con}/>\n        <SavingThrow\n          type=\"int\"\n          modifier={this.props.modifiers.int}\n          bonus={this.props.bonus}\n          proficient={this.props.savingProficiencies.int}/>\n        <SavingThrow\n          type=\"wis\"\n          modifier={this.props.modifiers.wis}\n          bonus={this.props.bonus}\n          proficient={this.props.savingProficiencies.wis}/>\n        <SavingThrow\n          type=\"cha\"\n          modifier={this.props.modifiers.cha}\n          bonus={this.props.bonus}\n          proficient={this.props.savingProficiencies.cha}/>\n      </div>\n    )\n  }\n}\n\nexport default SavingThrowsContainer;\n","import React, { Component } from 'react';\nimport * as dataParsers from '../services/dataParsers';\nimport '../css/ProficienciesContainer.css';\n\nclass ProficienciesContainer extends Component {\n\n  toolProficiencies() {\n    let toolFromClass = dataParsers.toolProficienciesFromClass(this.props.class)\n    let toolFromBackground = dataParsers.toolProfsFromBackground(this.props.background)\n\n    let sanitizedTools = [toolFromClass, toolFromBackground].filter(element => element !== 'none')\n\n    return sanitizedTools.length < 1 ? 'none' : sanitizedTools.join(', ');\n  }\n\n  render() {\n    return(\n      <div className=\"proficiencies-container\">\n        <div className=\"armor-proficiencies\">\n          <strong>Armor Proficiencies: </strong>\n          {dataParsers.armorProficienciesFromClass(this.props.class)}\n        </div>\n        <div className=\"weapon-proficiencies\">\n          <strong>Weapon Proficiencies: </strong>\n          {dataParsers.weaponProficienciesFromClass(this.props.class)}\n        </div>\n        <div className=\"tool-proficiencies\">\n          <strong>Tool Proficiencies: </strong>\n          {this.toolProficiencies(this.props.class)}\n        </div>\n        <div className=\"language-proficiencies\">\n          <strong>Languages: </strong>\n          {dataParsers.languagesFromBackground(this.props.background)}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ProficienciesContainer;\n","import React, { Component } from 'react';\nimport '../css/ArmorClass.css';\n\nclass ArmorClass extends Component {\n  render() {\n    return(\n      <div className=\"armor-class\">\n        <strong>Armor Class</strong>\n        <div className=\"armor-class-value\">\n          {10 + this.props.dexMod}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ArmorClass;\n","import React, { Component } from 'react';\nimport '../css/HealthPoints.css';\n\nclass HealthPoints extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: props.current,\n      max: props.max\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\tif(this.props.max !== prevProps.max){\n\t\t\tvar newMax = this.props.max\n      if(this.state.current > newMax) {\n        this.setState({ max: newMax, current: newMax })\n      } else {\n        this.setState({ max: newMax })\n      }\n\t\t}\n\t}\n\n\thandleChange(event) {\n\t\tvar newHp = parseInt(event.target.value) || 0\n\n\t\tif(newHp < 0) { newHp = 0 }\n\t\tif(newHp > this.state.max) { newHp = this.state.max }\n\n\t\tevent.target.value = newHp\n\n\t\tthis.setState({current: newHp});\n\t\tthis.props.onHpChange(newHp);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div className=\"health-points\">\n\t\t\t\t<strong>Health Points</strong>\n\t\t\t\t<input className=\"current\" data-testid=\"currentHp\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={this.state.current}\n\t\t\t\t\tonChange={this.handleChange} />\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t<div className=\"max\" data-testid=\"maxHp\">\n\t\t\t\t\t\t\t{this.state.max}\n\t\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default HealthPoints;\n","import React, { Component } from 'react';\nimport '../css/StatsContainer.css';\nimport ArmorClass from './ArmorClass';\nimport HealthPoints from './HealthPoints';\n\nclass StatsContainer extends Component {\n  constructor(props){\n    super(props);\n\n    this.handleHpChange = this.handleHpChange.bind(this);\n  }\n\n  handleHpChange(newHp) {\n    this.props.onHpChange(newHp)\n  }\n\n  render() {\n    return(\n      <div className=\"stats-container\">\n        <ArmorClass dexMod={this.props.dexMod} armorBase={0} shieldMod={0}/>\n        <HealthPoints\n          max={this.props.max}\n          current={this.props.current}\n          onHpChange={this.handleHpChange}/>\n      </div>\n    )\n  }\n}\n\nexport default StatsContainer;\n","import React, { Component } from 'react';\nimport { backgroundParagraphs,\n         featureFromBackground,\n         specialtyFromBackground,\n         characteristicFromBackground } from '../services/dataParsers';\nimport '../css/CharContainer.css';\n\nclass CharContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      backgroundParagraphs: backgroundParagraphs(this.props.background)\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.background !== prevProps.background) {\n      this.setState({\n        backgroundParagraphs: backgroundParagraphs(this.props.background)\n      })\n    }\n  }\n\n  arrayToParagraphs(array) {\n    return(\n      array.map((paragraph, index) => {\n        return <p key={index}>{paragraph}</p>\n      })\n    )\n  }\n\n  fluffView() {\n    return this.arrayToParagraphs(this.state.backgroundParagraphs)\n  }\n\n  featureView() {\n    return (\n      <div>\n        <strong>{featureFromBackground(this.props.background).name}</strong>\n        {this.arrayToParagraphs(featureFromBackground(this.props.background).description)}\n      </div>\n    )\n  }\n\n  rollableObject(object, key) {\n    if(Object.entries(object).length !== 0) {\n      return (\n        <div key={key}>\n          <strong>{object.label}</strong>\n          <p>{object.description}</p>\n          <strong>Roll 1d{object.rollDice.faces}</strong>\n          <ul>\n            { Object.entries(object.rolls).map((roll) => {\n              return(<li key={roll[0]}>{roll[0].concat(' | ', roll[1])}</li>)\n            })}\n          </ul>\n        </div>\n      )\n    } else {\n      return <br/>\n    }\n  }\n\n  specialtyView() {\n    let specialty = specialtyFromBackground(this.props.background)\n    return this.rollableObject(specialty, 1) // index will always be 1\n  }\n\n  characteristicView() {\n    let characteristic = characteristicFromBackground(this.props.background)\n    return(\n      <div>\n        <strong>Suggested Characteristics</strong>\n        <p>{characteristic.description}</p>\n        {characteristic.characteristics.map((object, index) => {\n          return this.rollableObject(object, index)\n        })}\n      </div>\n    )\n  }\n\n  render() {\n    const fluff = this.fluffView()\n    const feature = this.featureView()\n    const specialty = this.specialtyView()\n    const characteristic = this.characteristicView()\n\n    return(\n      <div className=\"char-container\">\n        { fluff }\n        { feature }\n        { specialty }\n        { characteristic }\n      </div>\n    )\n  }\n}\n\nexport default CharContainer;\n","import React, { Component } from 'react';\nimport '../css/AtacksContainer.css';\n\nclass AtacksContainer extends Component {\n  render() {\n    return(\n      <div className=\"atacks-container\">\n        atks\n      </div>\n    )\n  }\n}\n\nexport default AtacksContainer;\n","import React, { Component } from 'react';\nimport { equipmentFromBackground } from '../services/dataParsers'\nimport '../css/ItemsContainer.css';\n\nclass ItemsContainer extends Component {\n  render() {\n    return(\n      <div className=\"items-container\">\n        <strong>Items</strong>\n        <p>{equipmentFromBackground(this.props.background)}</p>\n      </div>\n    )\n  }\n}\n\nexport default ItemsContainer;\n","import React, { Component } from 'react';\nimport '../css/Sheet.css';\nimport * as helpers from '../services/helpers';\nimport * as hpCalculator from '../services/hpCalculator';\nimport * as dataParsers from '../services/dataParsers';\n\nimport '../css/HeaderContainer.css';\nimport CharName from './header_container/CharName';\nimport CharClass from './header_container/CharClass';\nimport CharRace from './header_container/CharRace';\nimport CharBackground from './header_container/CharBackground';\n\nimport LevelsContainer from './LevelsContainer';\nimport AttributesContainer from './AttributesContainer';\nimport SkillsContainer from './SkillsContainer';\nimport SavingThrowsContainer from './SavingThrowsContainer';\n\nimport ProficienciesContainer from './ProficienciesContainer';\nimport StatsContainer from './StatsContainer';\nimport CharContainer from './CharContainer';\nimport AtacksContainer from './AtacksContainer';\nimport ItemsContainer from './ItemsContainer';\n\nimport BackgroundsData from '../data/backgrounds-full.json';\n\nclass Sheet extends Component {\n  constructor(props){\n    super(props);\n\n    var level = 5\n    var charClass = \"Barbarian\"\n    var charRace = \"Dragonborn\"\n    var charBackground = \"Sailor\"\n\n    var attributesBase = {\n      str: 12,\n      dex: 14,\n      con: 12,\n      int: 14,\n      wis: 12,\n      cha: 15\n    }\n    var attributeModifiers = helpers.modifiers(attributesBase, dataParsers.racialAttributes(\"Dragonborn\"))\n    var hpMax = hpCalculator.averageHp(level, attributeModifiers.con, dataParsers.hitDiceNumberFromClass('Barbarian'))\n    var proficiencyBonus = helpers.proficiencyBonusFromLevel(level)\n    var savingProficiencies = dataParsers.savingProficienciesFromClass(charClass)\n    var attributesRacial = dataParsers.racialAttributes(charRace)\n\n    this.state = {\n      charName: \"Tracx Lury\",\n      race: charRace,\n      class: charClass,\n      background: charBackground,\n      level: level,\n      hpCurrent: 6,\n      hpMax: hpMax,\n      proficiencyBonus: proficiencyBonus,\n      savingProficiencies: savingProficiencies,\n      attributes: attributesBase,\n      attributes_racial: attributesRacial,\n      attributeModifiers: attributeModifiers\n    }\n  };\n\n  handleLevelChange = (newLevel) => {\n    var newProfBonus = helpers.proficiencyBonusFromLevel(newLevel)\n    var newHpMax = hpCalculator.averageHp(\n      newLevel,\n      this.state.attributeModifiers.con,\n      dataParsers.hitDiceNumberFromClass(this.state.class)\n    )\n\n    this.setState({\n      level: newLevel,\n      proficiencyBonus: newProfBonus,\n      hpMax: newHpMax\n    })\n  }\n\n  handleAttributeChange = (type, value) => {\n    if(type === 'con') {\n      var newHpMax = hpCalculator.averageHp(\n        this.state.level,\n        helpers.modifierFromAttribute(value + this.state.attributes_racial.con),\n        dataParsers.hitDiceNumberFromClass(this.state.class)\n      );\n\n      this.setState({hpMax: newHpMax});\n    }\n\n    var new_attributes = this.state.attributes\n    var changed_attribute = {}\n    changed_attribute[type] = value\n    new_attributes = Object.assign(new_attributes, changed_attribute)\n    this.setState({attributes: new_attributes})\n  }\n\n  handleModifierChange = (type, value) => {\n    var new_modifiers = this.state.attributeModifiers\n    var changed_modifier = {}\n    changed_modifier[type] = value\n    new_modifiers = Object.assign(new_modifiers, changed_modifier)\n    this.setState({attributeModifiers: new_modifiers})\n  }\n\n  handleClassChange = (className) => {\n    var newSavingProficiencies = dataParsers.savingProficienciesFromClass(className)\n    var newHpMax = hpCalculator.averageHp(\n      this.state.level,\n      this.state.attributeModifiers.con,\n      dataParsers.hitDiceNumberFromClass(className)\n    )\n\n    this.setState({\n      class: className,\n      savingProficiencies: newSavingProficiencies,\n      hpMax: newHpMax\n    })\n    //TODO Choose two skills from list\n  }\n\n  handleRaceChange = (raceName) => {\n    var racial_attrs = dataParsers.racialAttributes(raceName)\n    this.setState({\n      attributeModifiers: helpers.modifiers(this.state.attributes, racial_attrs),\n      attributes_racial: racial_attrs,\n      race: raceName,\n    });\n  }\n\n  handleBackgroundChange = (backgroundName) => {\n    this.setState({\n      background: backgroundName\n    });\n  }\n\n  handleNameChange = (charName) => {\n    this.setState({charName: charName});\n  }\n\n  handleHpChange = (newHp) => {\n    this.setState({hpCurrent: newHp});\n  }\n\n  render() {\n    return (\n      <div className=\"sheet\">\n        <div className=\"header-container\">\n          <CharName\n            value={this.state.charName}\n            onNameChange={this.handleNameChange} />\n          <CharClass\n            value={this.state.class}\n            onClassChange={this.handleClassChange}/>\n          <CharRace\n            value={this.state.race}\n            onRaceChange={this.handleRaceChange} />\n          <CharBackground\n            value={this.state.background}\n            backgrounds={helpers.listNames(BackgroundsData)}\n            onBackgroundChange={this.handleBackgroundChange} />\n        </div>\n        <LevelsContainer\n          value={this.state.level}\n          proficiencyBonus={this.state.proficiencyBonus}\n          onLevelChange={this.handleLevelChange}/>\n         <AttributesContainer\n           attributes={this.state.attributes}\n           onAttributeChange={this.handleAttributeChange}\n           attributes_racial={this.state.attributes_racial}\n           modifiers={this.state.attributeModifiers}\n           onModifierChange={this.handleModifierChange}/>\n         <SavingThrowsContainer\n           modifiers={this.state.attributeModifiers}\n           bonus={this.state.proficiencyBonus}\n           savingProficiencies={this.state.savingProficiencies} />\n         <SkillsContainer\n           background={this.state.background}\n           class={this.state.class}\n           bonus={this.state.proficiencyBonus}\n           modifiers={this.state.attributeModifiers}/>\n         <StatsContainer\n           dexMod={this.state.attributeModifiers.dex}\n           max={this.state.hpMax}\n           current={this.state.hpCurrent}\n           onHpChange={this.handleHpChange}/>\n         <ProficienciesContainer class={this.state.class} background={this.state.background}/>\n         <AtacksContainer />\n         <CharContainer background={this.state.background}/>\n         <ItemsContainer background={this.state.background} />\n      </div>\n    );\n  }\n}\n\nexport default Sheet;\n","import React from 'react';\n// import logo from './logo.svg';\nimport '../css/App.css';\n\nimport Sheet from './Sheet';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Sheet />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}